#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CNS_Access_List.Data_Connections
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ITTickets")]
	public partial class TicketsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTicketer(Ticketer instance);
    partial void UpdateTicketer(Ticketer instance);
    partial void DeleteTicketer(Ticketer instance);
    #endregion
		
		public TicketsDataContext() : 
				base(global::CNS_Access_List.Properties.Settings.Default.ITTicketsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TicketsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TicketsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TicketsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TicketsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ticketer> Ticketers
		{
			get
			{
				return this.GetTable<Ticketer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticketer")]
	public partial class Ticketer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ticketor;
		
		private string _Tphone;
		
		private string _Temail;
		
		private string _Dissue;
		
		private string _Issue;
		
		private string _Resolver;
		
		private string _Remail;
		
		private string _Rphone;
		
		private string _Resolution;
		
		private System.Nullable<char> _Status;
		
		private long _ID2;
		
		private string _Notes;
		
		private string _Dresolve;
		
		private string _DeviceID;
		
		private string _IssueType;
		
		private System.Nullable<char> _Priority;
		
		private bool _Supported;
		
		private string _Assigned;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicketorChanging(string value);
    partial void OnTicketorChanged();
    partial void OnTphoneChanging(string value);
    partial void OnTphoneChanged();
    partial void OnTemailChanging(string value);
    partial void OnTemailChanged();
    partial void OnDissueChanging(string value);
    partial void OnDissueChanged();
    partial void OnIssueChanging(string value);
    partial void OnIssueChanged();
    partial void OnResolverChanging(string value);
    partial void OnResolverChanged();
    partial void OnRemailChanging(string value);
    partial void OnRemailChanged();
    partial void OnRphoneChanging(string value);
    partial void OnRphoneChanged();
    partial void OnResolutionChanging(string value);
    partial void OnResolutionChanged();
    partial void OnStatusChanging(System.Nullable<char> value);
    partial void OnStatusChanged();
    partial void OnID2Changing(long value);
    partial void OnID2Changed();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDresolveChanging(string value);
    partial void OnDresolveChanged();
    partial void OnDeviceIDChanging(string value);
    partial void OnDeviceIDChanged();
    partial void OnIssueTypeChanging(string value);
    partial void OnIssueTypeChanged();
    partial void OnPriorityChanging(System.Nullable<char> value);
    partial void OnPriorityChanged();
    partial void OnSupportedChanging(bool value);
    partial void OnSupportedChanged();
    partial void OnAssignedChanging(string value);
    partial void OnAssignedChanged();
    #endregion
		
		public Ticketer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticketor", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Ticketor
		{
			get
			{
				return this._Ticketor;
			}
			set
			{
				if ((this._Ticketor != value))
				{
					this.OnTicketorChanging(value);
					this.SendPropertyChanging();
					this._Ticketor = value;
					this.SendPropertyChanged("Ticketor");
					this.OnTicketorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tphone", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Tphone
		{
			get
			{
				return this._Tphone;
			}
			set
			{
				if ((this._Tphone != value))
				{
					this.OnTphoneChanging(value);
					this.SendPropertyChanging();
					this._Tphone = value;
					this.SendPropertyChanged("Tphone");
					this.OnTphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temail", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Temail
		{
			get
			{
				return this._Temail;
			}
			set
			{
				if ((this._Temail != value))
				{
					this.OnTemailChanging(value);
					this.SendPropertyChanging();
					this._Temail = value;
					this.SendPropertyChanged("Temail");
					this.OnTemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dissue", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Dissue
		{
			get
			{
				return this._Dissue;
			}
			set
			{
				if ((this._Dissue != value))
				{
					this.OnDissueChanging(value);
					this.SendPropertyChanging();
					this._Dissue = value;
					this.SendPropertyChanged("Dissue");
					this.OnDissueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issue", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Issue
		{
			get
			{
				return this._Issue;
			}
			set
			{
				if ((this._Issue != value))
				{
					this.OnIssueChanging(value);
					this.SendPropertyChanging();
					this._Issue = value;
					this.SendPropertyChanged("Issue");
					this.OnIssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolver", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Resolver
		{
			get
			{
				return this._Resolver;
			}
			set
			{
				if ((this._Resolver != value))
				{
					this.OnResolverChanging(value);
					this.SendPropertyChanging();
					this._Resolver = value;
					this.SendPropertyChanged("Resolver");
					this.OnResolverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remail", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Remail
		{
			get
			{
				return this._Remail;
			}
			set
			{
				if ((this._Remail != value))
				{
					this.OnRemailChanging(value);
					this.SendPropertyChanging();
					this._Remail = value;
					this.SendPropertyChanged("Remail");
					this.OnRemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rphone", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Rphone
		{
			get
			{
				return this._Rphone;
			}
			set
			{
				if ((this._Rphone != value))
				{
					this.OnRphoneChanging(value);
					this.SendPropertyChanging();
					this._Rphone = value;
					this.SendPropertyChanged("Rphone");
					this.OnRphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Resolution
		{
			get
			{
				return this._Resolution;
			}
			set
			{
				if ((this._Resolution != value))
				{
					this.OnResolutionChanging(value);
					this.SendPropertyChanging();
					this._Resolution = value;
					this.SendPropertyChanged("Resolution");
					this.OnResolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1)")]
		public System.Nullable<char> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID2", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID2
		{
			get
			{
				return this._ID2;
			}
			set
			{
				if ((this._ID2 != value))
				{
					this.OnID2Changing(value);
					this.SendPropertyChanging();
					this._ID2 = value;
					this.SendPropertyChanged("ID2");
					this.OnID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dresolve", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Dresolve
		{
			get
			{
				return this._Dresolve;
			}
			set
			{
				if ((this._Dresolve != value))
				{
					this.OnDresolveChanging(value);
					this.SendPropertyChanging();
					this._Dresolve = value;
					this.SendPropertyChanged("Dresolve");
					this.OnDresolveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueType", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string IssueType
		{
			get
			{
				return this._IssueType;
			}
			set
			{
				if ((this._IssueType != value))
				{
					this.OnIssueTypeChanging(value);
					this.SendPropertyChanging();
					this._IssueType = value;
					this.SendPropertyChanged("IssueType");
					this.OnIssueTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Char(1)")]
		public System.Nullable<char> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supported", DbType="Bit NOT NULL")]
		public bool Supported
		{
			get
			{
				return this._Supported;
			}
			set
			{
				if ((this._Supported != value))
				{
					this.OnSupportedChanging(value);
					this.SendPropertyChanging();
					this._Supported = value;
					this.SendPropertyChanged("Supported");
					this.OnSupportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Assigned
		{
			get
			{
				return this._Assigned;
			}
			set
			{
				if ((this._Assigned != value))
				{
					this.OnAssignedChanging(value);
					this.SendPropertyChanging();
					this._Assigned = value;
					this.SendPropertyChanged("Assigned");
					this.OnAssignedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
